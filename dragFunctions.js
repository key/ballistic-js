// Drag function tables for G1-G8 models
// Based on standard drag functions used in exterior ballistics
// Mach number vs Drag coefficient (Cd/Cd_ref)

const DRAG_FUNCTIONS = {
    // G1 - Standard projectile (flat base with 2 caliber radius ogive)
    G1: [
        [0.00, 0.2629], [0.05, 0.2558], [0.10, 0.2487], [0.15, 0.2413], [0.20, 0.2344],
        [0.25, 0.2278], [0.30, 0.2214], [0.35, 0.2155], [0.40, 0.2104], [0.45, 0.2061],
        [0.50, 0.2032], [0.55, 0.2020], [0.60, 0.2034], [0.65, 0.2165], [0.70, 0.2230],
        [0.75, 0.2313], [0.80, 0.2417], [0.825, 0.2546], [0.85, 0.2706], [0.875, 0.2901],
        [0.90, 0.3136], [0.925, 0.3415], [0.95, 0.3734], [0.975, 0.4084], [1.00, 0.4448],
        [1.025, 0.4805], [1.05, 0.5136], [1.075, 0.5427], [1.10, 0.5677], [1.125, 0.5883],
        [1.15, 0.6053], [1.175, 0.6191], [1.20, 0.6393], [1.225, 0.6518], [1.25, 0.6589],
        [1.30, 0.6621], [1.35, 0.6625], [1.40, 0.6607], [1.45, 0.6573], [1.50, 0.6528],
        [1.55, 0.6474], [1.60, 0.6413], [1.65, 0.6347], [1.70, 0.6280], [1.75, 0.6210],
        [1.80, 0.6141], [1.85, 0.6072], [1.90, 0.6003], [1.95, 0.5935], [2.00, 0.5867],
        [2.05, 0.5804], [2.10, 0.5743], [2.15, 0.5685], [2.20, 0.5630], [2.25, 0.5577],
        [2.30, 0.5527], [2.35, 0.5481], [2.40, 0.5438], [2.45, 0.5397], [2.50, 0.5325],
        [2.60, 0.5264], [2.70, 0.5211], [2.80, 0.5160], [2.90, 0.5110], [3.00, 0.5060],
        [3.10, 0.5010], [3.20, 0.4962], [3.30, 0.4915], [3.40, 0.4870], [3.50, 0.4826],
        [3.60, 0.4784], [3.70, 0.4743], [3.80, 0.4703], [3.90, 0.4664], [4.00, 0.4627],
        [4.20, 0.4557], [4.40, 0.4489], [4.60, 0.4425], [4.80, 0.4365], [5.00, 0.4309]
    ],

    // G2 - Aberdeen J projectile
    G2: [
        [0.00, 0.2303], [0.05, 0.2298], [0.10, 0.2287], [0.15, 0.2271], [0.20, 0.2251],
        [0.25, 0.2227], [0.30, 0.2196], [0.35, 0.2156], [0.40, 0.2107], [0.45, 0.2048],
        [0.50, 0.1980], [0.55, 0.1905], [0.60, 0.1828], [0.65, 0.1758], [0.70, 0.1702],
        [0.75, 0.1669], [0.775, 0.1664], [0.80, 0.1667], [0.825, 0.1682], [0.85, 0.1711],
        [0.875, 0.1761], [0.90, 0.1831], [0.925, 0.2004], [0.95, 0.2589], [0.975, 0.3492],
        [1.00, 0.3983], [1.025, 0.4075], [1.05, 0.4103], [1.075, 0.4114], [1.10, 0.4106],
        [1.125, 0.4089], [1.15, 0.4068], [1.175, 0.4046], [1.20, 0.4021], [1.225, 0.3994],
        [1.25, 0.3968], [1.30, 0.3914], [1.35, 0.3861], [1.40, 0.3810], [1.45, 0.3762],
        [1.50, 0.3717], [1.55, 0.3675], [1.60, 0.3636], [1.65, 0.3600], [1.70, 0.3566],
        [1.75, 0.3534], [1.80, 0.3505], [1.85, 0.3477], [1.90, 0.3451], [1.95, 0.3426],
        [2.00, 0.3403], [2.05, 0.3381], [2.10, 0.3360], [2.15, 0.3340], [2.20, 0.3321],
        [2.25, 0.3303], [2.30, 0.3286], [2.35, 0.3269], [2.40, 0.3252], [2.45, 0.3237],
        [2.50, 0.3222], [2.60, 0.3193], [2.70, 0.3166], [2.80, 0.3140], [2.90, 0.3116],
        [3.00, 0.3093], [3.10, 0.3070], [3.20, 0.3048], [3.30, 0.3027], [3.40, 0.3007],
        [3.50, 0.2987], [3.60, 0.2968], [3.70, 0.2949], [3.80, 0.2931], [3.90, 0.2914],
        [4.00, 0.2897], [4.20, 0.2865], [4.40, 0.2835], [4.60, 0.2807], [4.80, 0.2780],
        [5.00, 0.2755]
    ],

    // G5 - Short boat tail projectile
    G5: [
        [0.00, 0.1710], [0.05, 0.1719], [0.10, 0.1727], [0.15, 0.1732], [0.20, 0.1734],
        [0.25, 0.1730], [0.30, 0.1718], [0.35, 0.1696], [0.40, 0.1668], [0.45, 0.1637],
        [0.50, 0.1603], [0.55, 0.1566], [0.60, 0.1529], [0.65, 0.1497], [0.70, 0.1473],
        [0.75, 0.1463], [0.80, 0.1489], [0.825, 0.1535], [0.85, 0.1605], [0.875, 0.1707],
        [0.90, 0.1855], [0.925, 0.2051], [0.95, 0.2318], [0.975, 0.2656], [1.00, 0.3036],
        [1.025, 0.3429], [1.05, 0.3803], [1.075, 0.4135], [1.10, 0.4413], [1.125, 0.4637],
        [1.15, 0.4814], [1.175, 0.4951], [1.20, 0.5058], [1.225, 0.5141], [1.25, 0.5206],
        [1.30, 0.5290], [1.35, 0.5338], [1.40, 0.5364], [1.45, 0.5375], [1.50, 0.5375],
        [1.55, 0.5367], [1.60, 0.5352], [1.65, 0.5333], [1.70, 0.5310], [1.75, 0.5285],
        [1.80, 0.5257], [1.85, 0.5228], [1.90, 0.5198], [1.95, 0.5167], [2.00, 0.5135],
        [2.05, 0.5104], [2.10, 0.5074], [2.15, 0.5043], [2.20, 0.5013], [2.25, 0.4984],
        [2.30, 0.4955], [2.35, 0.4927], [2.40, 0.4899], [2.45, 0.4872], [2.50, 0.4846],
        [2.60, 0.4796], [2.70, 0.4748], [2.80, 0.4702], [2.90, 0.4658], [3.00, 0.4616],
        [3.10, 0.4575], [3.20, 0.4536], [3.30, 0.4499], [3.40, 0.4463], [3.50, 0.4429],
        [3.60, 0.4395], [3.70, 0.4363], [3.80, 0.4332], [3.90, 0.4301], [4.00, 0.4272],
        [4.20, 0.4217], [4.40, 0.4164], [4.60, 0.4114], [4.80, 0.4067], [5.00, 0.4022]
    ],

    // G6 - Flat base spitzer
    G6: [
        [0.00, 0.2617], [0.05, 0.2553], [0.10, 0.2491], [0.15, 0.2432], [0.20, 0.2376],
        [0.25, 0.2324], [0.30, 0.2278], [0.35, 0.2238], [0.40, 0.2205], [0.45, 0.2177],
        [0.50, 0.2155], [0.55, 0.2138], [0.60, 0.2126], [0.65, 0.2121], [0.70, 0.2122],
        [0.75, 0.2132], [0.80, 0.2154], [0.825, 0.2172], [0.85, 0.2197], [0.875, 0.2232],
        [0.90, 0.2276], [0.925, 0.2335], [0.95, 0.2449], [0.975, 0.2655], [1.00, 0.3029],
        [1.025, 0.3443], [1.05, 0.3813], [1.075, 0.4128], [1.10, 0.4391], [1.125, 0.4605],
        [1.15, 0.4779], [1.175, 0.4917], [1.20, 0.5024], [1.225, 0.5106], [1.25, 0.5168],
        [1.30, 0.5243], [1.35, 0.5283], [1.40, 0.5303], [1.45, 0.5310], [1.50, 0.5307],
        [1.55, 0.5296], [1.60, 0.5280], [1.65, 0.5259], [1.70, 0.5235], [1.75, 0.5208],
        [1.80, 0.5180], [1.85, 0.5151], [1.90, 0.5120], [1.95, 0.5088], [2.00, 0.5057],
        [2.05, 0.5027], [2.10, 0.4996], [2.15, 0.4965], [2.20, 0.4936], [2.25, 0.4907],
        [2.30, 0.4878], [2.35, 0.4851], [2.40, 0.4823], [2.45, 0.4797], [2.50, 0.4771],
        [2.60, 0.4721], [2.70, 0.4674], [2.80, 0.4628], [2.90, 0.4585], [3.00, 0.4543],
        [3.10, 0.4503], [3.20, 0.4464], [3.30, 0.4427], [3.40, 0.4392], [3.50, 0.4357],
        [3.60, 0.4324], [3.70, 0.4292], [3.80, 0.4261], [3.90, 0.4231], [4.00, 0.4202],
        [4.20, 0.4147], [4.40, 0.4094], [4.60, 0.4045], [4.80, 0.3997], [5.00, 0.3952]
    ],

    // G7 - Long boat tail projectile
    G7: [
        [0.00, 0.1198], [0.05, 0.1197], [0.10, 0.1196], [0.15, 0.1194], [0.20, 0.1193],
        [0.25, 0.1194], [0.30, 0.1194], [0.35, 0.1194], [0.40, 0.1193], [0.45, 0.1193],
        [0.50, 0.1194], [0.55, 0.1197], [0.60, 0.1202], [0.65, 0.1207], [0.70, 0.1215],
        [0.725, 0.1226], [0.75, 0.1242], [0.775, 0.1266], [0.80, 0.1306], [0.825, 0.1368],
        [0.85, 0.1464], [0.875, 0.1660], [0.90, 0.2054], [0.925, 0.2413], [0.95, 0.2546],
        [0.975, 0.2593], [1.00, 0.2612], [1.025, 0.2620], [1.05, 0.2623], [1.075, 0.2622],
        [1.10, 0.2619], [1.125, 0.2614], [1.15, 0.2607], [1.175, 0.2600], [1.20, 0.2592],
        [1.225, 0.2583], [1.25, 0.2574], [1.30, 0.2556], [1.35, 0.2538], [1.40, 0.2519],
        [1.45, 0.2501], [1.50, 0.2483], [1.55, 0.2464], [1.60, 0.2446], [1.65, 0.2429],
        [1.70, 0.2411], [1.75, 0.2394], [1.80, 0.2377], [1.85, 0.2360], [1.90, 0.2344],
        [1.95, 0.2328], [2.00, 0.2313], [2.05, 0.2297], [2.10, 0.2282], [2.15, 0.2268],
        [2.20, 0.2253], [2.25, 0.2239], [2.30, 0.2226], [2.35, 0.2213], [2.40, 0.2200],
        [2.45, 0.2187], [2.50, 0.2175], [2.60, 0.2151], [2.70, 0.2128], [2.80, 0.2106],
        [2.90, 0.2085], [3.00, 0.2064], [3.10, 0.2044], [3.20, 0.2025], [3.30, 0.2006],
        [3.40, 0.1988], [3.50, 0.1970], [3.60, 0.1953], [3.70, 0.1937], [3.80, 0.1920],
        [3.90, 0.1905], [4.00, 0.1890], [4.20, 0.1861], [4.40, 0.1833], [4.60, 0.1807],
        [4.80, 0.1782], [5.00, 0.1758]
    ],

    // G8 - Flat base projectile
    G8: [
        [0.00, 0.2105], [0.05, 0.2105], [0.10, 0.2104], [0.15, 0.2104], [0.20, 0.2103],
        [0.25, 0.2103], [0.30, 0.2103], [0.35, 0.2103], [0.40, 0.2103], [0.45, 0.2102],
        [0.50, 0.2102], [0.55, 0.2102], [0.60, 0.2102], [0.65, 0.2102], [0.70, 0.2103],
        [0.75, 0.2103], [0.80, 0.2104], [0.825, 0.2104], [0.85, 0.2105], [0.875, 0.2106],
        [0.90, 0.2109], [0.925, 0.2183], [0.95, 0.2571], [0.975, 0.2993], [1.00, 0.3106],
        [1.025, 0.3114], [1.05, 0.3119], [1.075, 0.3123], [1.10, 0.3126], [1.125, 0.3128],
        [1.15, 0.3130], [1.175, 0.3132], [1.20, 0.3134], [1.225, 0.3135], [1.25, 0.3136],
        [1.30, 0.3139], [1.35, 0.3141], [1.40, 0.3143], [1.45, 0.3144], [1.50, 0.3145],
        [1.55, 0.3147], [1.60, 0.3148], [1.65, 0.3148], [1.70, 0.3149], [1.75, 0.3150],
        [1.80, 0.3151], [1.85, 0.3152], [1.90, 0.3152], [1.95, 0.3153], [2.00, 0.3154],
        [2.05, 0.3154], [2.10, 0.3155], [2.15, 0.3156], [2.20, 0.3156], [2.25, 0.3157],
        [2.30, 0.3158], [2.35, 0.3158], [2.40, 0.3159], [2.45, 0.3159], [2.50, 0.3160],
        [2.60, 0.3161], [2.70, 0.3162], [2.80, 0.3164], [2.90, 0.3165], [3.00, 0.3166],
        [3.10, 0.3167], [3.20, 0.3168], [3.30, 0.3169], [3.40, 0.3170], [3.50, 0.3171],
        [3.60, 0.3172], [3.70, 0.3173], [3.80, 0.3174], [3.90, 0.3174], [4.00, 0.3175],
        [4.20, 0.3177], [4.40, 0.3178], [4.60, 0.3179], [4.80, 0.3180], [5.00, 0.3182]
    ]
};

// Reference drag coefficients for each model at standard conditions
const REFERENCE_DRAG_COEFFICIENTS = {
    G1: 0.519,
    G2: 0.466,
    G5: 0.317,
    G6: 0.485,
    G7: 0.223,
    G8: 0.391
};

// Standard conditions for drag function calculations
const STANDARD_CONDITIONS = {
    temperature: 15,       // Â°C
    pressure: 1013.25,    // hPa  
    humidity: 0,          // %
    altitude: 0           // m
};

class DragFunctionCalculator {
    constructor() {
        this.dragTables = DRAG_FUNCTIONS;
        this.referenceCd = REFERENCE_DRAG_COEFFICIENTS;
    }

    // Interpolate drag coefficient from table based on Mach number
    interpolateDragCoefficient(machNumber, dragModel) {
        const table = this.dragTables[dragModel];
        if (!table) {
            throw new Error(`Invalid drag model: ${dragModel}`);
        }

        // Handle edge cases
        if (machNumber <= table[0][0]) {
            return table[0][1];
        }
        if (machNumber >= table[table.length - 1][0]) {
            return table[table.length - 1][1];
        }

        // Find the two points to interpolate between
        for (let i = 0; i < table.length - 1; i++) {
            if (machNumber >= table[i][0] && machNumber <= table[i + 1][0]) {
                const x1 = table[i][0];
                const y1 = table[i][1];
                const x2 = table[i + 1][0];
                const y2 = table[i + 1][1];

                // Linear interpolation
                const ratio = (machNumber - x1) / (x2 - x1);
                return y1 + ratio * (y2 - y1);
            }
        }

        // Shouldn't reach here
        return table[0][1];
    }

    // Calculate actual drag coefficient from BC
    calculateDragCoefficient(bc, dragModel, machNumber) {
        const cdRatio = this.interpolateDragCoefficient(machNumber, dragModel);
        const referenceCd = this.referenceCd[dragModel];
        
        // Cd = (reference_Cd * Cd_ratio) / BC
        return (referenceCd * cdRatio) / bc;
    }

    // Convert between different BC standards
    convertBC(bc, fromModel, toModel, velocity, soundSpeed) {
        const machNumber = velocity / soundSpeed;
        
        // Get drag coefficient ratios for both models
        const fromCdRatio = this.interpolateDragCoefficient(machNumber, fromModel);
        const toCdRatio = this.interpolateDragCoefficient(machNumber, toModel);
        
        // Convert BC
        const fromRefCd = this.referenceCd[fromModel];
        const toRefCd = this.referenceCd[toModel];
        
        return bc * (fromRefCd / toRefCd) * (fromCdRatio / toCdRatio);
    }

    // Get drag coefficient for a specific velocity
    getDragCoefficientAtVelocity(bc, dragModel, velocity, soundSpeed) {
        const machNumber = velocity / soundSpeed;
        return this.calculateDragCoefficient(bc, dragModel, machNumber);
    }
}

// Export for ES6 modules
export { DragFunctionCalculator, DRAG_FUNCTIONS, REFERENCE_DRAG_COEFFICIENTS };

// Export for CommonJS (Node.js)
if (typeof module !== 'undefined' && module.exports) {
    module.exports = { DragFunctionCalculator, DRAG_FUNCTIONS, REFERENCE_DRAG_COEFFICIENTS };
}